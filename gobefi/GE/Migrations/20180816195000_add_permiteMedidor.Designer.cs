// <auto-generated />
using System;
using GobEfi.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180816195000_add_permiteMedidor")]
    partial class add_permiteMedidor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ArchivoAdjunto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Descripcion");

                    b.Property<long>("DivisionId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<long>("TipoArchivoId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("TipoArchivoId");

                    b.ToTable("ArchivoAdjuntos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Componente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<long>("DivisionId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<double>("Superficie");

                    b.Property<bool>("TieneAislacion");

                    b.Property<long>("TipoAislacionId");

                    b.Property<long>("TipoMaterialId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("TipoAislacionId");

                    b.HasIndex("TipoMaterialId");

                    b.ToTable("Componente");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Componente");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Compra", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("Consumo");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<DateTime>("FinLectura");

                    b.Property<DateTime>("InicioLectura");

                    b.Property<long?>("MedidorId");

                    b.Property<string>("ModifiedBy");

                    b.Property<double>("Monto");

                    b.Property<long?>("NumeroClienteId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("MedidorId");

                    b.HasIndex("NumeroClienteId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Comuna", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<long?>("ProvinciaId");

                    b.Property<long?>("RegionId");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("RegionId");

                    b.ToTable("Comunas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Division", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("AnyoConstruccion");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("EdificioId");

                    b.Property<int>("Funcionarios");

                    b.Property<double?>("Latitud");

                    b.Property<double?>("Longitud");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<string>("Pisos");

                    b.Property<bool>("ReportaPMG");

                    b.Property<long>("ServicioId");

                    b.Property<double?>("Superficie");

                    b.Property<long>("TipoAgrupamientoId");

                    b.Property<long>("TipoPropiedadId");

                    b.Property<long>("TipoUnidadId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("EdificioId");

                    b.HasIndex("ServicioId");

                    b.HasIndex("TipoAgrupamientoId");

                    b.HasIndex("TipoPropiedadId");

                    b.HasIndex("TipoUnidadId");

                    b.ToTable("Divisiones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Edificio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double?>("Altitud");

                    b.Property<string>("Calle");

                    b.Property<long?>("ComunaId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Direccion");

                    b.Property<double?>("Latitud");

                    b.Property<double?>("Longitud");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Numero");

                    b.Property<long>("TipoEdificioId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("ComunaId");

                    b.HasIndex("TipoEdificioId");

                    b.ToTable("Edificios");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EmpresaDistribuidora", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("EnergeticoId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("EnergeticoId");

                    b.ToTable("EmpresaDistribuidoras");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Energetico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Icono");

                    b.Property<string>("ModifiedBy");

                    b.Property<bool>("Multiple");

                    b.Property<string>("Nombre");

                    b.Property<bool>("PermiteMedidor");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Energeticos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EnergeticoDivision", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<long>("EnergeticoId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EnergeticoId");

                    b.ToTable("EnergeticoDivisiones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EnergeticoUnidad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("Calor");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<double>("Densidad");

                    b.Property<long>("EnergeticoId");

                    b.Property<double>("Factor");

                    b.Property<string>("ModifiedBy");

                    b.Property<long>("UnidadId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("EnergeticoId");

                    b.HasIndex("UnidadId");

                    b.ToTable("EnergeticoUnidades");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Equipo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("AnyoCompra");

                    b.Property<int>("Cantidad");

                    b.Property<int>("CostoMantencion");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long?>("DivisionId");

                    b.Property<long?>("EnergeticInId");

                    b.Property<long?>("EnergeticOutId");

                    b.Property<long>("EnergeticoIn");

                    b.Property<long>("EnergeticoOut");

                    b.Property<double>("HorasUso");

                    b.Property<int>("Inversion");

                    b.Property<string>("Marca");

                    b.Property<string>("Modelo");

                    b.Property<string>("ModifiedBy");

                    b.Property<long>("ModoOperacionId");

                    b.Property<double>("Potencia");

                    b.Property<long>("SistemaId");

                    b.Property<long>("TipoTecnologiaId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EnergeticInId");

                    b.HasIndex("EnergeticOutId");

                    b.HasIndex("ModoOperacionId");

                    b.HasIndex("SistemaId");

                    b.HasIndex("TipoTecnologiaId");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Institucion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Instituciones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Medidor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long?>("DivisionId1");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Numero");

                    b.Property<long>("NumeroClienteId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId1");

                    b.HasIndex("NumeroClienteId");

                    b.ToTable("Medidores");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ModoOperacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("ModoOperaciones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.NumeroCliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<long>("EmpresaDistribuidoraId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("NombreCliente");

                    b.Property<string>("Numero");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EmpresaDistribuidoraId");

                    b.ToTable("NumeroClientes");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Provincia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<long>("RegionId");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Region", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<int>("Numero");

                    b.Property<int>("Posicion");

                    b.HasKey("Id");

                    b.ToTable("Regiones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Rol", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("Nombre");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Servicio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Identificador");

                    b.Property<long>("InstitucionId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<bool>("ReportaPMG");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("InstitucionId");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Sistema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Sistema");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.SubDivision", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("SubDivisiones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoAgrupamiento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("TipoAgrupamientos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoAislacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("TipoAislaciones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoArchivo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("MimeType");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("TipoArchivos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoEdificio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("TipoEdificios");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoMaterial", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("TipoMateriales");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoPropiedad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("TipoPropiedades");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoPuerta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<double>("Factor");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("TipoPuertas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoSombreado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<double>("FactorSombra");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("TipoSombreados");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoTecho", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<double>("Factor");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("TipoTechos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoTecnologia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("TipoTecnologias");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoUnidad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("TipoUnidades");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoVentana", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<double>("FactorVentana");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("TipoVentanas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Unidad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abrv");

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<bool>("Active");

                    b.Property<string>("Apellidos");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsAuditor");

                    b.Property<bool>("IsGestorConsulta");

                    b.Property<bool>("IsGestorServicio");

                    b.Property<bool>("IsGestorUnidad");

                    b.Property<bool>("IsUser");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Nombres");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Cimiento", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Componente");


                    b.ToTable("Cimiento");

                    b.HasDiscriminator().HasValue("Cimiento");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Piso", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Componente");

                    b.Property<double>("Altura");

                    b.ToTable("Piso");

                    b.HasDiscriminator().HasValue("Piso");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Puerta", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Componente");

                    b.Property<double>("Ancho");

                    b.Property<double>("Largo");

                    b.Property<long>("TipoPuertaId");

                    b.HasIndex("TipoPuertaId");

                    b.ToTable("Puerta");

                    b.HasDiscriminator().HasValue("Puerta");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Techo", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Componente");

                    b.Property<double>("Ancho")
                        .HasColumnName("Techo_Ancho");

                    b.Property<double>("Largo")
                        .HasColumnName("Techo_Largo");

                    b.Property<long>("TipoTechoId");

                    b.HasIndex("TipoTechoId");

                    b.ToTable("Techo");

                    b.HasDiscriminator().HasValue("Techo");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Ventana", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Componente");

                    b.Property<double>("Alto");

                    b.Property<double>("Largo")
                        .HasColumnName("Ventana_Largo");

                    b.Property<long>("TipoVentanaId");

                    b.HasIndex("TipoVentanaId");

                    b.ToTable("Ventana");

                    b.HasDiscriminator().HasValue("Ventana");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ArchivoAdjunto", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("Adjuntos")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoArchivo", "TipoArchivo")
                        .WithMany()
                        .HasForeignKey("TipoArchivoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Componente", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("Componentes")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoAislacion", "TipoAislacion")
                        .WithMany()
                        .HasForeignKey("TipoAislacionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoMaterial", "TipoMaterial")
                        .WithMany()
                        .HasForeignKey("TipoMaterialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Compra", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("Compras")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Medidor", "Medidor")
                        .WithMany("Compras")
                        .HasForeignKey("MedidorId");

                    b.HasOne("GobEfi.Web.Data.Entities.NumeroCliente", "NumeroCliente")
                        .WithMany("Compras")
                        .HasForeignKey("NumeroClienteId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Comuna", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Provincia", "Provincia")
                        .WithMany("Comunas")
                        .HasForeignKey("ProvinciaId");

                    b.HasOne("GobEfi.Web.Data.Entities.Region", "Region")
                        .WithMany("Comunas")
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Division", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Edificio", "Edificio")
                        .WithMany()
                        .HasForeignKey("EdificioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoAgrupamiento", "TipoAgrupamiento")
                        .WithMany()
                        .HasForeignKey("TipoAgrupamientoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoPropiedad", "TipoPropiedad")
                        .WithMany()
                        .HasForeignKey("TipoPropiedadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoUnidad", "TipoUnidad")
                        .WithMany()
                        .HasForeignKey("TipoUnidadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Edificio", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Comuna", "Comuna")
                        .WithMany()
                        .HasForeignKey("ComunaId");

                    b.HasOne("GobEfi.Web.Data.Entities.TipoEdificio", "TipoEdificio")
                        .WithMany()
                        .HasForeignKey("TipoEdificioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EmpresaDistribuidora", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Energetico", "Energetico")
                        .WithMany()
                        .HasForeignKey("EnergeticoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EnergeticoDivision", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("Energeticos")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Energetico", "Energetico")
                        .WithMany("Divisiones")
                        .HasForeignKey("EnergeticoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EnergeticoUnidad", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Energetico", "Energetico")
                        .WithMany("Unidades")
                        .HasForeignKey("EnergeticoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Unidad", "Unidad")
                        .WithMany()
                        .HasForeignKey("UnidadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Equipo", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division")
                        .WithMany("Equipos")
                        .HasForeignKey("DivisionId");

                    b.HasOne("GobEfi.Web.Data.Entities.Energetico", "EnergeticIn")
                        .WithMany()
                        .HasForeignKey("EnergeticInId");

                    b.HasOne("GobEfi.Web.Data.Entities.Energetico", "EnergeticOut")
                        .WithMany()
                        .HasForeignKey("EnergeticOutId");

                    b.HasOne("GobEfi.Web.Data.Entities.ModoOperacion", "ModoOperacion")
                        .WithMany()
                        .HasForeignKey("ModoOperacionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Sistema", "Sistema")
                        .WithMany()
                        .HasForeignKey("SistemaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoTecnologia", "TipoTecnologia")
                        .WithMany()
                        .HasForeignKey("TipoTecnologiaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Medidor", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("Medidores")
                        .HasForeignKey("DivisionId1");

                    b.HasOne("GobEfi.Web.Data.Entities.NumeroCliente", "NumeroCliente")
                        .WithMany("Medidores")
                        .HasForeignKey("NumeroClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.NumeroCliente", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("NumerosClientes")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.EmpresaDistribuidora", "EmpresaDistribuidora")
                        .WithMany()
                        .HasForeignKey("EmpresaDistribuidoraId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Provincia", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Region", "Region")
                        .WithMany("Provincias")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Servicio", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Institucion", "Institucion")
                        .WithMany("Servicios")
                        .HasForeignKey("InstitucionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.SubDivision", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("SubDivisiones")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Rol")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Rol")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Puerta", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.TipoPuerta", "TipoPuerta")
                        .WithMany()
                        .HasForeignKey("TipoPuertaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Techo", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.TipoTecho", "TipoTecho")
                        .WithMany()
                        .HasForeignKey("TipoTechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Ventana", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.TipoVentana", "TipoVentana")
                        .WithMany()
                        .HasForeignKey("TipoVentanaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
