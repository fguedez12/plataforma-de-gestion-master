// <auto-generated />
using System;
using GobEfi.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GobEfi.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250624145626_activeAlcance")]
    partial class activeAlcance
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Accion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("AdjuntoNombre");

                    b.Property<string>("AdjuntoUrl");

                    b.Property<int?>("AsignacionPresupuestaria");

                    b.Property<string>("Cobertura")
                        .IsRequired();

                    b.Property<string>("CostoAsociado")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DimensionBrechaId");

                    b.Property<string>("EstadoAvance")
                        .HasMaxLength(50);

                    b.Property<string>("GestorRespnsableId");

                    b.Property<int?>("ItemPresupuestario");

                    b.Property<string>("MedidaDescripcion");

                    b.Property<long?>("MedidaId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("NivelMedida")
                        .IsRequired();

                    b.Property<long>("ObjetivoId");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(1000);

                    b.Property<string>("OtraMedida");

                    b.Property<string>("OtroServicio")
                        .IsRequired();

                    b.Property<bool>("Piloto");

                    b.Property<long?>("PresupuestoImplementacion");

                    b.Property<bool?>("PresupuestoImplementacionPedido");

                    b.Property<long?>("PresupuestoIngenieria");

                    b.Property<bool?>("PresupuestoIngenieriaPedido");

                    b.Property<string>("ResponsableEmail");

                    b.Property<string>("ResponsableNombre");

                    b.Property<int?>("Subtitulo");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DimensionBrechaId");

                    b.HasIndex("MedidaId");

                    b.HasIndex("ObjetivoId");

                    b.ToTable("Acciones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.AccionServicio", b =>
                {
                    b.Property<long>("AccionId");

                    b.Property<long>("ServicioId");

                    b.HasKey("AccionId", "ServicioId");

                    b.HasIndex("ServicioId");

                    b.ToTable("AccionServicios");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.AccionUnidad", b =>
                {
                    b.Property<long>("AccionId");

                    b.Property<long>("DivisionId");

                    b.HasKey("AccionId", "DivisionId");

                    b.HasIndex("DivisionId");

                    b.ToTable("AccionUnidades");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Aeropuerto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Iata");

                    b.Property<float>("Lat");

                    b.Property<float>("Lon");

                    b.Property<string>("Nombre");

                    b.Property<long>("PaisId");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Aeropuertos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Agua", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("AdjuntoNombre");

                    b.Property<string>("AdjuntoUrl");

                    b.Property<int?>("AnioAdquisicion");

                    b.Property<double>("Cantidad");

                    b.Property<bool>("CompraAgregada");

                    b.Property<int?>("Costo");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<DateTime?>("Fecha");

                    b.Property<DateTime?>("FinLectura");

                    b.Property<DateTime?>("InicioLectura");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("TipoSuministroId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Aguas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Aislacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<int>("SubNivel");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Aislaciones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Ajuste", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<bool>("ActiveAlcanceModule");

                    b.Property<bool>("ComprasServicio");

                    b.Property<bool>("CreateUnidadPMG");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<bool>("DeleteUnidadPMG");

                    b.Property<bool>("EditUnidadPMG");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Ajustes");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ArchivoAdjunto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Descripcion");

                    b.Property<long>("DivisionId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<long>("TipoArchivoId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Url");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("TipoArchivoId");

                    b.ToTable("ArchivoAdjuntos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ArchivoDp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Descripcion");

                    b.Property<long>("DivisionId");

                    b.Property<string>("FileUrl");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<string>("NombreArchivo");

                    b.Property<long>("Peso");

                    b.Property<string>("Seccion");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("ArchivosDp");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Area", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<string>("NroRol");

                    b.Property<long>("PisoId");

                    b.Property<decimal>("Superficie");

                    b.Property<long>("TipoUsoId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("PisoId");

                    b.HasIndex("TipoUsoId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Artefacto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("CantidadArtefactos");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<int>("EstadoId");

                    b.Property<string>("ModifiedBy");

                    b.Property<bool>("TecnologiaAhorro");

                    b.Property<int>("TecnologiaAhorroPorcentaje");

                    b.Property<long>("TipoArtefactoId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("TipoArtefactoId");

                    b.ToTable("Artefactos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Brecha", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<long>("DimensionBrechaId");

                    b.Property<string>("ModifiedBy");

                    b.Property<long?>("ObjetivoId");

                    b.Property<int>("Priorizacion");

                    b.Property<long>("ServicioId");

                    b.Property<int>("TipoBrecha");

                    b.Property<string>("Titulo")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DimensionBrechaId");

                    b.HasIndex("ObjetivoId");

                    b.HasIndex("ServicioId");

                    b.ToTable("Brechas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.BrechaUnidad", b =>
                {
                    b.Property<long>("BrechaId");

                    b.Property<long>("DivisionId");

                    b.HasKey("BrechaId", "DivisionId");

                    b.HasIndex("DivisionId");

                    b.ToTable("BrechaUnidades");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Certificado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Certificados");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Cimiento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("EdificioId");

                    b.Property<long?>("MaterialidadId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("EdificioId")
                        .IsUnique();

                    b.HasIndex("MaterialidadId");

                    b.ToTable("Cimientos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Compra", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("Consumo");

                    b.Property<double>("Costo");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("CreatedByDivisionId");

                    b.Property<long>("DivisionId");

                    b.Property<long>("EnergeticoId");

                    b.Property<string>("EstadoValidacionId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("sin_revision");

                    b.Property<long>("FacturaId");

                    b.Property<DateTime>("FechaCompra");

                    b.Property<DateTime>("FinLectura");

                    b.Property<DateTime>("InicioLectura");

                    b.Property<string>("ModifiedBy");

                    b.Property<long?>("NumeroClienteId");

                    b.Property<string>("Observacion");

                    b.Property<string>("ObservacionRevision");

                    b.Property<DateTime?>("ReviewedAt");

                    b.Property<string>("RevisadoPor");

                    b.Property<bool>("SinMedidor");

                    b.Property<long?>("UnidadMedidaId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EnergeticoId");

                    b.HasIndex("EstadoValidacionId");

                    b.HasIndex("FacturaId")
                        .IsUnique();

                    b.HasIndex("NumeroClienteId");

                    b.HasIndex("UnidadMedidaId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.CompraMedidor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CompraId");

                    b.Property<double>("Consumo");

                    b.Property<long>("MedidorId");

                    b.Property<long?>("ParametroMedicionId");

                    b.Property<long?>("UnidadMedidaId");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("MedidorId");

                    b.HasIndex("ParametroMedicionId");

                    b.HasIndex("UnidadMedidaId");

                    b.ToTable("CompraMedidor");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Comuna", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<long?>("ProvinciaId");

                    b.Property<long?>("RegionId");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("RegionId");

                    b.ToTable("Comunas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Contenedor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<float?>("Capacidad");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<string>("ModifiedBy");

                    b.Property<int?>("NRecipientes");

                    b.Property<string>("Nombre");

                    b.Property<string>("Propiedad");

                    b.Property<string>("TipoResiduo");

                    b.Property<string>("Ubicacion");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Contenedores");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.DimensionBrecha", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("NombreNormalizado")
                        .IsRequired();

                    b.Property<string>("Target")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("DimensionBrechas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.DimensionServicio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DimensionBrechaId");

                    b.Property<bool>("IngresoObservacion");

                    b.Property<bool>("IngresoObservacionAcciones");

                    b.Property<bool>("IngresoObservacionIndicadores");

                    b.Property<bool>("IngresoObservacionObjetivos");

                    b.Property<string>("Observacion");

                    b.Property<string>("ObservacionAcciones");

                    b.Property<string>("ObservacionIndicadores");

                    b.Property<string>("ObservacionObjetivos");

                    b.Property<long>("ServicioId");

                    b.HasKey("Id");

                    b.HasIndex("DimensionBrechaId");

                    b.HasIndex("ServicioId");

                    b.ToTable("DimensionServicios");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Direccion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle");

                    b.Property<long>("ComunaId");

                    b.Property<string>("DireccionCompleta");

                    b.Property<string>("Numero");

                    b.Property<long>("ProvinciaId");

                    b.Property<long>("RegionId");

                    b.HasKey("Id");

                    b.HasIndex("ComunaId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("RegionId");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Division", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccesoFactura");

                    b.Property<int?>("AccesoFacturaAgua");

                    b.Property<bool>("Active");

                    b.Property<long?>("AdministracionServicioId");

                    b.Property<bool>("AireAcondicionadoElectricidad");

                    b.Property<int?>("AnioInicioGestionEnergetica");

                    b.Property<int?>("AnioInicioRestoItems");

                    b.Property<int>("AnyoConstruccion");

                    b.Property<bool>("CalefaccionGas");

                    b.Property<string>("Calle");

                    b.Property<bool>("CargaPosteriorT");

                    b.Property<long?>("ColectorId");

                    b.Property<bool>("ComparteMedidorAgua");

                    b.Property<bool>("ComparteMedidorElectricidad");

                    b.Property<bool>("ComparteMedidorGasCanieria");

                    b.Property<bool?>("Compromiso2022");

                    b.Property<long?>("ComunaId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Direccion");

                    b.Property<long?>("DireccionInmuebleId");

                    b.Property<bool>("DisponeCalefaccion");

                    b.Property<bool?>("DisponeVehiculo");

                    b.Property<bool>("DpSt1");

                    b.Property<bool>("DpSt2");

                    b.Property<bool>("DpSt3");

                    b.Property<bool>("DpSt4");

                    b.Property<long>("EdificioId");

                    b.Property<long?>("EnergeticoAcsId");

                    b.Property<long?>("EnergeticoCalefaccionId");

                    b.Property<long?>("EnergeticoRefrigeracionId");

                    b.Property<long?>("EquipoAcsId");

                    b.Property<long?>("EquipoCalefaccionId");

                    b.Property<long?>("EquipoRefrigeracionId");

                    b.Property<int?>("EstadoCompromiso2022");

                    b.Property<bool>("FotoTecho");

                    b.Property<int>("Funcionarios");

                    b.Property<int>("GeVersion");

                    b.Property<bool?>("GestionBienes");

                    b.Property<bool>("ImpSisFv");

                    b.Property<bool>("IndicadorEE");

                    b.Property<float?>("IndicadorEnegia");

                    b.Property<bool>("InstTerSisFv");

                    b.Property<int?>("InstitucionResponsableAguaId");

                    b.Property<int?>("InstitucionResponsableId");

                    b.Property<bool>("JustificaResiduos");

                    b.Property<bool>("JustificaResiduosNoReciclados");

                    b.Property<string>("JustificaRol");

                    b.Property<string>("Justificacion");

                    b.Property<string>("JustificacionResiduos");

                    b.Property<string>("JustificacionResiduosNoReciclados");

                    b.Property<double?>("Latitud");

                    b.Property<double?>("Longitud");

                    b.Property<int?>("MantColectores");

                    b.Property<int?>("MantSfv");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("NivelPaso3");

                    b.Property<bool?>("NoDeclaraArtefactos");

                    b.Property<bool?>("NoDeclaraContenedores");

                    b.Property<bool?>("NoDeclaraImpresora");

                    b.Property<string>("Nombre");

                    b.Property<int>("NroOtrosColaboradores");

                    b.Property<string>("NroRol")
                        .HasMaxLength(255);

                    b.Property<string>("Numero");

                    b.Property<string>("ObsInexistenciaEyV");

                    b.Property<bool>("ObservaAgua");

                    b.Property<bool>("ObservaPapel");

                    b.Property<bool>("ObservaResiduos");

                    b.Property<string>("ObservacionAgua");

                    b.Property<string>("ObservacionCompromiso2022");

                    b.Property<string>("ObservacionPapel");

                    b.Property<string>("ObservacionResiduos");

                    b.Property<string>("OrganizacionResponsable");

                    b.Property<string>("OrganizacionResponsableAgua");

                    b.Property<long?>("ParentId");

                    b.Property<string>("Pisos");

                    b.Property<bool>("PisosIguales")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<float?>("PotIns");

                    b.Property<long?>("ProvinciaId");

                    b.Property<long?>("RegionId");

                    b.Property<bool>("ReportaEV");

                    b.Property<bool>("ReportaPMG");

                    b.Property<long>("ServicioId");

                    b.Property<int?>("ServicioResponsableAguaId");

                    b.Property<int?>("ServicioResponsableId");

                    b.Property<bool>("SinRol");

                    b.Property<bool>("SistemaSolarTermico");

                    b.Property<float?>("SupColectores");

                    b.Property<float?>("SupFotoTecho");

                    b.Property<float?>("SupImptSisFv");

                    b.Property<float?>("SupInstTerSisFv");

                    b.Property<double?>("Superficie");

                    b.Property<long?>("TempSeteoCalefaccionId");

                    b.Property<long?>("TempSeteoRefrigeracionId");

                    b.Property<bool>("TieneMedidorElectricidad");

                    b.Property<bool>("TieneMedidorGas");

                    b.Property<long?>("TipoAdministracionId");

                    b.Property<long?>("TipoInmueble");

                    b.Property<long?>("TipoLuminariaId");

                    b.Property<long>("TipoPropiedadId");

                    b.Property<long?>("TipoUnidadId");

                    b.Property<long?>("TipoUsoId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<bool>("UsaBidon");

                    b.Property<string>("VehiculosIds");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("AdministracionServicioId");

                    b.HasIndex("ComunaId");

                    b.HasIndex("DireccionInmuebleId");

                    b.HasIndex("EdificioId");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("RegionId");

                    b.HasIndex("ServicioId");

                    b.HasIndex("TipoPropiedadId");

                    b.HasIndex("TipoUnidadId");

                    b.HasIndex("TipoUsoId");

                    b.ToTable("Divisiones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Documento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ActaComiteId");

                    b.Property<bool>("Active");

                    b.Property<bool?>("ActividadesCI");

                    b.Property<bool?>("ActualizaPolitica");

                    b.Property<string>("AdjuntoNombre");

                    b.Property<string>("AdjuntoNombreCompraFuera");

                    b.Property<string>("AdjuntoNombreCompraSustentableAnt");

                    b.Property<string>("AdjuntoRespaldoNombre");

                    b.Property<string>("AdjuntoRespaldoNombreCompromiso");

                    b.Property<string>("AdjuntoRespaldoNombreParticipativo");

                    b.Property<string>("AdjuntoRespaldoUrl");

                    b.Property<string>("AdjuntoRespaldoUrlCompromiso");

                    b.Property<string>("AdjuntoRespaldoUrlParticipativo");

                    b.Property<string>("AdjuntoUrl");

                    b.Property<string>("AdjuntoUrlCompraFuera");

                    b.Property<string>("AdjuntoUrlCompraSustentableAnt");

                    b.Property<bool?>("ApruebaAlcanceGradualSEV");

                    b.Property<bool?>("ApruebaDiagnostico");

                    b.Property<bool?>("CambioClimatico");

                    b.Property<int?>("Cobertura");

                    b.Property<bool?>("ConsultaPersonal");

                    b.Property<bool?>("Consultiva");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("DefinePolitica");

                    b.Property<bool?>("DefinePropuestaConcientizados");

                    b.Property<bool?>("DefinicionesEstrategicas");

                    b.Property<bool>("Destruccion");

                    b.Property<bool?>("DetActDeConcientizacion");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<long?>("DocumentoPadreId");

                    b.Property<bool>("Donacion");

                    b.Property<bool?>("E1O1RT2");

                    b.Property<bool?>("ElaboraPolitica");

                    b.Property<bool>("EstandaresSustentabilidad");

                    b.Property<int?>("EtapaSEV_docs");

                    b.Property<DateTime?>("Fecha");

                    b.Property<bool>("FormatoDocumento");

                    b.Property<string>("FuncionariosDesignados");

                    b.Property<int>("FuncionariosDesignadosNum");

                    b.Property<bool?>("GestionAgua");

                    b.Property<bool?>("GestionBajaBs");

                    b.Property<bool?>("GestionComprasS");

                    b.Property<bool?>("GestionEnergia");

                    b.Property<bool?>("GestionResiduosEc");

                    b.Property<bool?>("GestionVehiculosTs");

                    b.Property<bool?>("HuellaC");

                    b.Property<bool?>("MantienePolitica");

                    b.Property<string>("Materia");

                    b.Property<bool?>("MateriaGestionPapel");

                    b.Property<string>("ModifiedBy");

                    b.Property<int?>("NComprasCriterios");

                    b.Property<int?>("NComprasCriterios2");

                    b.Property<int?>("NComprasCriteriosFuera");

                    b.Property<int?>("NComprasRubros");

                    b.Property<int?>("NComprasRubros2");

                    b.Property<int?>("NComprasRubrosFuera");

                    b.Property<string>("NResolucionPolitica");

                    b.Property<string>("NResolucionProcedimiento");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500);

                    b.Property<bool?>("OtraMateria");

                    b.Property<long?>("PoliticaId");

                    b.Property<float?>("PorcentajeCapacitadosEtapa2");

                    b.Property<float?>("PorcentajeConcientizadosEtapa2");

                    b.Property<bool>("ProcesoGestionSustentable");

                    b.Property<bool>("ProdBajoImpactoAmbiental");

                    b.Property<float?>("PropuestaPorcentaje");

                    b.Property<string>("PropuestaTemasCI");

                    b.Property<bool?>("PuestaEnMarchaCEV");

                    b.Property<bool>("Reciclaje");

                    b.Property<bool>("Reduccion");

                    b.Property<bool>("Reparacion");

                    b.Property<bool>("Reutilizacion");

                    b.Property<bool>("RevisionPoliticaAmbiental");

                    b.Property<bool?>("RevisionProcBienesMuebles");

                    b.Property<long?>("ServicioId");

                    b.Property<string>("TipoAdjunto");

                    b.Property<int>("TipoDocumentoId");

                    b.Property<string>("Titulo");

                    b.Property<int?>("TotalColaboradoresCapacitados");

                    b.Property<float?>("TotalColaboradoresConcientizados");

                    b.Property<bool?>("TrasladoSustentable");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("ServicioId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Documentos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Documento");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Edificio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double?>("Altitud");

                    b.Property<string>("Calle");

                    b.Property<long?>("ComunaId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Direccion");

                    b.Property<int>("DpP1");

                    b.Property<int>("DpP2");

                    b.Property<int>("DpP3");

                    b.Property<int>("DpP4");

                    b.Property<long?>("EntornoId");

                    b.Property<long?>("FrontisId");

                    b.Property<long?>("InerciaTermicaId");

                    b.Property<double?>("Latitud");

                    b.Property<double?>("Longitud");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Numero");

                    b.Property<int?>("OldId");

                    b.Property<long?>("TipoAgrupamientoId");

                    b.Property<long?>("TipoEdificioId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("ComunaId");

                    b.HasIndex("EntornoId");

                    b.HasIndex("InerciaTermicaId");

                    b.HasIndex("TipoAgrupamientoId");

                    b.HasIndex("TipoEdificioId");

                    b.ToTable("Edificios");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EmpresaDistribuidora", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("EnergeticoId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<long>("OldId");

                    b.Property<string>("RUT");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("EnergeticoId");

                    b.ToTable("EmpresaDistribuidoras");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EmpresaDistribuidoraComuna", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<long>("ComunaId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("EmpresaDistribuidoraId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("ComunaId");

                    b.HasIndex("EmpresaDistribuidoraId");

                    b.ToTable("EmpresasDistribuidoraComunas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EncuestaColaborador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("C1DisC");

                    b.Property<int?>("C1DisP");

                    b.Property<int?>("C1ElC");

                    b.Property<int?>("C1ElP");

                    b.Property<int?>("C1GasC");

                    b.Property<int?>("C1GasP");

                    b.Property<int?>("C1HibC");

                    b.Property<int?>("C1HibP");

                    b.Property<int?>("C1HidC");

                    b.Property<int?>("C1HidP");

                    b.Property<int?>("C2DisC");

                    b.Property<int?>("C2DisP");

                    b.Property<int?>("C2ElC");

                    b.Property<int?>("C2ElP");

                    b.Property<int?>("C2GasC");

                    b.Property<int?>("C2GasP");

                    b.Property<int?>("C2HibC");

                    b.Property<int?>("C2HibP");

                    b.Property<int?>("C2HidC");

                    b.Property<int?>("C2HidP");

                    b.Property<int?>("C3DisC");

                    b.Property<int?>("C3DisP");

                    b.Property<int?>("C3ElC");

                    b.Property<int?>("C3ElP");

                    b.Property<int?>("C3GasC");

                    b.Property<int?>("C3GasP");

                    b.Property<int?>("C3HibC");

                    b.Property<int?>("C3HibP");

                    b.Property<int?>("C3HidC");

                    b.Property<int?>("C3HidP");

                    b.Property<int?>("C4DisC");

                    b.Property<int?>("C4DisP");

                    b.Property<int?>("C4ElC");

                    b.Property<int?>("C4ElP");

                    b.Property<int?>("C4GasC");

                    b.Property<int?>("C4GasP");

                    b.Property<int?>("C4HibC");

                    b.Property<int?>("C4HibP");

                    b.Property<int?>("C4HidC");

                    b.Property<int?>("C4HidP");

                    b.Property<int?>("C4mDisC");

                    b.Property<int?>("C4mDisP");

                    b.Property<int?>("C4mElC");

                    b.Property<int?>("C4mElP");

                    b.Property<int?>("C4mGasC");

                    b.Property<int?>("C4mGasP");

                    b.Property<int?>("C4mHibC");

                    b.Property<int?>("C4mHibP");

                    b.Property<int?>("C4mHidC");

                    b.Property<int?>("C4mHidP");

                    b.Property<int?>("CBiciAd");

                    b.Property<int?>("CBiciEl");

                    b.Property<int?>("CBiciEs");

                    b.Property<int?>("CBiciTa");

                    b.Property<int?>("CBusIu");

                    b.Property<int?>("CBusL");

                    b.Property<int?>("CBusTs");

                    b.Property<int?>("CCaminando");

                    b.Property<int?>("CColectivo");

                    b.Property<int?>("CMetro");

                    b.Property<int?>("CMetroT");

                    b.Property<int?>("CMetroTc");

                    b.Property<int?>("CMotoEl");

                    b.Property<int?>("CMotoGas");

                    b.Property<int?>("CScooterEl");

                    b.Property<int?>("CTaxi");

                    b.Property<int?>("CTpeA");

                    b.Property<int?>("CTpeM");

                    b.Property<float?>("D1DisC");

                    b.Property<float?>("D1DisP");

                    b.Property<float?>("D1ElC");

                    b.Property<float?>("D1ElP");

                    b.Property<float?>("D1GasC");

                    b.Property<float?>("D1GasP");

                    b.Property<float?>("D1HibC");

                    b.Property<float?>("D1HibP");

                    b.Property<float?>("D1HidC");

                    b.Property<float?>("D1HidP");

                    b.Property<float?>("D2DisC");

                    b.Property<float?>("D2DisP");

                    b.Property<float?>("D2ElC");

                    b.Property<float?>("D2ElP");

                    b.Property<float?>("D2GasC");

                    b.Property<float?>("D2GasP");

                    b.Property<float?>("D2HibC");

                    b.Property<float?>("D2HibP");

                    b.Property<float?>("D2HidC");

                    b.Property<float?>("D2HidP");

                    b.Property<float?>("D3DisC");

                    b.Property<float?>("D3DisP");

                    b.Property<float?>("D3ElC");

                    b.Property<float?>("D3ElP");

                    b.Property<float?>("D3GasC");

                    b.Property<float?>("D3GasP");

                    b.Property<float?>("D3HibC");

                    b.Property<float?>("D3HibP");

                    b.Property<float?>("D3HidC");

                    b.Property<float?>("D3HidP");

                    b.Property<float?>("D4DisC");

                    b.Property<float?>("D4DisP");

                    b.Property<float?>("D4ElC");

                    b.Property<float?>("D4ElP");

                    b.Property<float?>("D4GasC");

                    b.Property<float?>("D4GasP");

                    b.Property<float?>("D4HibC");

                    b.Property<float?>("D4HibP");

                    b.Property<float?>("D4HidC");

                    b.Property<float?>("D4HidP");

                    b.Property<float?>("D4mDisC");

                    b.Property<float?>("D4mDisP");

                    b.Property<float?>("D4mElC");

                    b.Property<float?>("D4mElP");

                    b.Property<float?>("D4mGasC");

                    b.Property<float?>("D4mGasP");

                    b.Property<float?>("D4mHibC");

                    b.Property<float?>("D4mHibP");

                    b.Property<float?>("D4mHidC");

                    b.Property<float?>("D4mHidP");

                    b.Property<float?>("DBiciAd");

                    b.Property<float?>("DBiciEl");

                    b.Property<float?>("DBiciEs");

                    b.Property<float?>("DBiciTa");

                    b.Property<float?>("DBusIu");

                    b.Property<float?>("DBusL");

                    b.Property<float?>("DBusTs");

                    b.Property<float?>("DCaminando");

                    b.Property<float?>("DColectivo");

                    b.Property<float?>("DMetro");

                    b.Property<float?>("DMetroT");

                    b.Property<float?>("DMetroTc");

                    b.Property<float?>("DMotoEl");

                    b.Property<float?>("DMotoGas");

                    b.Property<float?>("DScooterEl");

                    b.Property<float?>("DTaxi");

                    b.Property<float?>("DTpeA");

                    b.Property<float?>("DTpeM");

                    b.Property<long?>("ServicioId");

                    b.Property<int?>("TotalEncuestados");

                    b.Property<int?>("Year");

                    b.HasKey("Id");

                    b.HasIndex("ServicioId");

                    b.ToTable("EncuestaColaboradores");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EndPoint", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .IsRequired();

                    b.Property<string>("ControllerName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("EndPoints");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Energetico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Icono");

                    b.Property<string>("ModifiedBy");

                    b.Property<bool>("Multiple");

                    b.Property<string>("Nombre");

                    b.Property<long?>("OldId");

                    b.Property<bool>("PermiteMedidor");

                    b.Property<bool>("PermitePotenciaSuministrada");

                    b.Property<bool>("PermiteTipoTarifa");

                    b.Property<int>("Posicion");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Energeticos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EnergeticoDivision", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<long>("EnergeticoId");

                    b.Property<string>("ModifiedBy");

                    b.Property<long?>("NumeroClienteId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EnergeticoId");

                    b.HasIndex("NumeroClienteId");

                    b.ToTable("EnergeticoDivision");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EnergeticoUnidadMedida", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("Calor");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<double>("Densidad");

                    b.Property<long>("EnergeticoId");

                    b.Property<double>("Factor");

                    b.Property<string>("ModifiedBy");

                    b.Property<long>("UnidadMedidaId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("EnergeticoId");

                    b.HasIndex("UnidadMedidaId");

                    b.ToTable("EnergeticoUnidadesMedidas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Entorno", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Entornos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Equipo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("AnyoCompra");

                    b.Property<int>("Cantidad");

                    b.Property<int>("CostoMantencion");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long?>("DivisionId");

                    b.Property<long?>("EnergeticInId");

                    b.Property<long?>("EnergeticOutId");

                    b.Property<long>("EnergeticoIn");

                    b.Property<long>("EnergeticoOut");

                    b.Property<double>("HorasUso");

                    b.Property<int>("Inversion");

                    b.Property<string>("Marca");

                    b.Property<string>("Modelo");

                    b.Property<string>("ModifiedBy");

                    b.Property<long>("ModoOperacionId");

                    b.Property<double>("Potencia");

                    b.Property<long>("SistemaId");

                    b.Property<long>("TipoTecnologiaId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EnergeticInId");

                    b.HasIndex("EnergeticOutId");

                    b.HasIndex("ModoOperacionId");

                    b.HasIndex("SistemaId");

                    b.HasIndex("TipoTecnologiaId");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Espesor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Espesores");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EstadoValidacion", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("EstadoValidacion");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Estructura", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Estructuras");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EstructuraAislacion", b =>
                {
                    b.Property<long>("EstructuraId");

                    b.Property<long>("AislacionId");

                    b.HasKey("EstructuraId", "AislacionId");

                    b.HasIndex("AislacionId");

                    b.ToTable("EstructuraAislaciones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EstructuraMaterialidad", b =>
                {
                    b.Property<long>("EstructuraId");

                    b.Property<long>("MaterialidadId");

                    b.HasKey("EstructuraId", "MaterialidadId");

                    b.HasIndex("MaterialidadId");

                    b.ToTable("EstructuraMaterialidades");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EstructuraPosicionVentana", b =>
                {
                    b.Property<long>("EstructuraId");

                    b.Property<long>("PosicionVentanaId");

                    b.HasKey("EstructuraId", "PosicionVentanaId");

                    b.HasIndex("PosicionVentanaId");

                    b.ToTable("EstructuraPosicionVentana");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EstructuraTipoSombreado", b =>
                {
                    b.Property<long>("EstructuraId");

                    b.Property<long>("TipoSombreadoId");

                    b.HasKey("EstructuraId", "TipoSombreadoId");

                    b.HasIndex("TipoSombreadoId");

                    b.ToTable("EstructuraTipodeSombreado");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Impresora", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("BcnColor");

                    b.Property<int>("Caras");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<string>("Marca");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int>("NumeroImpresiones");

                    b.Property<float?>("Potencia");

                    b.Property<string>("TipoImpresora")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.Property<string>("modelo");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Impresoras");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Indicador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Denominador");

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<long>("DimensionBrechaId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("Numerador");

                    b.Property<long>("ObjetivoId");

                    b.Property<string>("RespladoMonitoreo");

                    b.Property<string>("UnidadMedida");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<double?>("Valor");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DimensionBrechaId");

                    b.HasIndex("ObjetivoId");

                    b.ToTable("Indicadores");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.InerciaTermica", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("InerciaTermicas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Institucion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<int>("OldId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Instituciones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Integrante", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaInst");

                    b.Property<string>("Email");

                    b.Property<long>("ListaIntegranteId");

                    b.Property<bool>("Marca");

                    b.Property<string>("Nombre");

                    b.Property<string>("Rol");

                    b.HasKey("Id");

                    b.HasIndex("ListaIntegranteId");

                    b.ToTable("Integrantes");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Materialidad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Materialidades");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Medida", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agrupacion");

                    b.Property<long?>("DimensionbrechaId");

                    b.Property<long?>("MedidaId");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("TipoDeMedida");

                    b.Property<int>("TipoMedida");

                    b.HasKey("Id");

                    b.HasIndex("DimensionbrechaId");

                    b.HasIndex("MedidaId");

                    b.ToTable("Medidas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Medidor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<bool>("Chilemedido");

                    b.Property<bool>("Compartido");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int?>("DeviceId");

                    b.Property<long?>("DivisionId");

                    b.Property<bool?>("Factura");

                    b.Property<int>("Fases");

                    b.Property<bool>("MedidorConsumo");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Numero");

                    b.Property<long>("NumeroClienteId");

                    b.Property<bool>("Smart");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("NumeroClienteId");

                    b.ToTable("Medidores");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.MedidorDivision", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<long>("MedidorId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("MedidorId");

                    b.ToTable("MedidorDivision");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.MedidorInteligente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<long>("ChileMedidoId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("MedidoresInteligentes");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.MedidorInteligenteDivision", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<long>("MedidorInteligenteId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("MedidorInteligenteId");

                    b.ToTable("MedidorInteligenteDivisiones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.MedidorInteligenteEdificio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("EdificioId");

                    b.Property<long>("MedidorInteligenteId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("EdificioId");

                    b.HasIndex("MedidorInteligenteId");

                    b.ToTable("MedidorInteligenteEdificios");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.MedidorInteligenteServicio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("MedidorInteligenteId");

                    b.Property<string>("ModifiedBy");

                    b.Property<long>("ServicioId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("MedidorInteligenteId");

                    b.HasIndex("ServicioId");

                    b.ToTable("MedidorInteligenteServicios");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName");

                    b.Property<bool?>("ActiveV3");

                    b.Property<string>("Component");

                    b.Property<string>("ControllerName");

                    b.Property<string>("Folder");

                    b.Property<string>("Icono");

                    b.Property<string>("IdTag");

                    b.Property<long?>("MenuId");

                    b.Property<long?>("MenuPanelId");

                    b.Property<string>("Nombre");

                    b.Property<int?>("Orden");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("MenuPanelId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.MenuPanel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<string>("TagHref");

                    b.Property<string>("TagId");

                    b.HasKey("Id");

                    b.ToTable("MenuPanel");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ModoOperacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("ModoOperaciones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Muro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<long?>("AislacionExtId");

                    b.Property<long?>("AislacionIntId");

                    b.Property<double?>("Altura");

                    b.Property<double>("Azimut");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<double>("Distancia");

                    b.Property<long?>("EspesorId");

                    b.Property<double>("FachadaEste");

                    b.Property<double>("FachadaNorte");

                    b.Property<double>("FachadaOeste");

                    b.Property<double>("FachadaSur");

                    b.Property<double?>("Largo");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("decimal(18,15)");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("decimal(18,15)");

                    b.Property<long?>("MaterialidadId");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("Order");

                    b.Property<string>("Orientacion");

                    b.Property<long>("PisoId");

                    b.Property<double?>("Superficie");

                    b.Property<string>("TipoMuro");

                    b.Property<long?>("TipoSombreadoId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<float>("Vanos");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("AislacionExtId");

                    b.HasIndex("AislacionIntId");

                    b.HasIndex("EspesorId");

                    b.HasIndex("MaterialidadId");

                    b.HasIndex("PisoId");

                    b.HasIndex("TipoSombreadoId");

                    b.ToTable("Muros");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.NotasCertificado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CertificadoId");

                    b.Property<string>("Codigo");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("Duracion");

                    b.Property<string>("Email");

                    b.Property<DateTime>("FechaEntrega");

                    b.Property<double>("NotaFinal");

                    b.Property<string>("NumeroSerie");

                    b.Property<string>("UsuarioId");

                    b.Property<int>("Version");

                    b.HasKey("Id");

                    b.HasIndex("CertificadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("NotasCertificados");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.NumeroCliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long?>("DivisionId");

                    b.Property<long?>("EmpresaDistribuidoraId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("NombreCliente");

                    b.Property<string>("Numero");

                    b.Property<decimal>("PotenciaSuministrada");

                    b.Property<long?>("TipoTarifaId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EmpresaDistribuidoraId");

                    b.HasIndex("TipoTarifaId");

                    b.ToTable("NumeroClientes");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.NumeroPiso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("Nivel");

                    b.Property<string>("Nombre");

                    b.Property<int>("Numero");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("NumeroPisos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Objetivo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long>("DimensionBrechaId");

                    b.Property<string>("ModifiedBy");

                    b.Property<long?>("ObjetivoId");

                    b.Property<string>("Titulo")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DimensionBrechaId");

                    b.HasIndex("ObjetivoId");

                    b.ToTable("Objetivos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Pais", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ParametroMedicion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<long>("UnidadesMedidaId");

                    b.HasKey("Id");

                    b.HasIndex("UnidadesMedidaId");

                    b.ToTable("ParametrosMedicion");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Permisos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Escritura");

                    b.Property<bool>("Lectura");

                    b.Property<long>("MenuId");

                    b.Property<string>("RolId");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RolId");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.PermisosBackEnd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EndPointId");

                    b.Property<string>("RolId");

                    b.HasKey("Id");

                    b.HasIndex("EndPointId");

                    b.HasIndex("RolId");

                    b.ToTable("PermisosBackEnd");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Piso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("Altura");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long?>("DivisionId");

                    b.Property<long?>("EdificioId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("NroRol");

                    b.Property<long>("NumeroPisoId");

                    b.Property<double>("Superficie");

                    b.Property<long?>("TipoUsoId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EdificioId");

                    b.HasIndex("NumeroPisoId");

                    b.HasIndex("TipoUsoId");

                    b.ToTable("Pisos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.PosicionVentana", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("PosicionVentanas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Programa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("AdjuntoNombre")
                        .IsRequired();

                    b.Property<string>("AdjuntoUrl")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<long>("ServicioId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("ServicioId");

                    b.ToTable("Programas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Provincia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<long>("RegionId");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Puerta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long?>("MaterialidadId");

                    b.Property<string>("ModifiedBy");

                    b.Property<long>("MuroId");

                    b.Property<double?>("Superficie");

                    b.Property<long?>("TipoMarcoId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("MaterialidadId");

                    b.HasIndex("MuroId");

                    b.HasIndex("TipoMarcoId");

                    b.ToTable("Puertas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Region", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<int>("Numero");

                    b.Property<int>("Posicion");

                    b.HasKey("Id");

                    b.ToTable("Regiones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Registro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos");

                    b.Property<string>("Email");

                    b.Property<DateTime>("Fecha");

                    b.Property<long>("MinisterioId");

                    b.Property<string>("Nombres");

                    b.Property<string>("OtroServicio");

                    b.Property<long>("ServicioId");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Reporte", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo");

                    b.Property<bool>("EsPMG");

                    b.Property<string>("Nombre");

                    b.Property<string>("ProcedimientoAlmacenado");

                    b.Property<string>("RutaDondeObtenerArchivo");

                    b.Property<bool>("SeGeneraAutomatico");

                    b.Property<long>("TipoArchivoId");

                    b.HasKey("Id");

                    b.HasIndex("TipoArchivoId");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ReporteRol", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ReporteId");

                    b.Property<string>("RolId");

                    b.HasKey("Id");

                    b.HasIndex("ReporteId");

                    b.HasIndex("RolId");

                    b.ToTable("ReportesRol");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Residuo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int?>("Anio");

                    b.Property<int>("Cantidad");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<DateTime?>("Fecha");

                    b.Property<bool>("IngresoAgregado");

                    b.Property<string>("ModifiedBy");

                    b.Property<long?>("ProcedimientoId");

                    b.Property<string>("TipoResiduo");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Residuos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Resma", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<bool>("Agregada");

                    b.Property<int?>("AnioAdquisicion");

                    b.Property<int>("CantidadResmas");

                    b.Property<int?>("CantidadResmasRecicladas");

                    b.Property<int>("CostoEstimado");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<DateTime?>("FechaAdquisicion");

                    b.Property<string>("IdMercadoPublico");

                    b.Property<string>("ModifiedBy");

                    b.Property<int?>("PapelRecicladoRango");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Resmas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.RespladoUserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("RespladoUserRoles");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Rol", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("DependeDelRoleId");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("Nombre");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.Property<int>("OldId");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Servicio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<bool>("BloqueoIngresoInfo");

                    b.Property<int>("ColaboradoresModAlcance");

                    b.Property<string>("ComentarioRed");

                    b.Property<bool>("CompraActiva");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("EtapaSEV");

                    b.Property<bool>("GEV3");

                    b.Property<string>("Identificador");

                    b.Property<long>("InstitucionId");

                    b.Property<string>("Justificacion");

                    b.Property<bool>("ModificacioAlcance");

                    b.Property<string>("ModifiedBy");

                    b.Property<bool?>("NoDeclaraViajeAvion");

                    b.Property<bool?>("NoDeclaraViajeAvion2025");

                    b.Property<bool?>("NoRegistraActividadInterna");

                    b.Property<bool?>("NoRegistraDifusionInterna");

                    b.Property<bool?>("NoRegistraDocResiduosCertificados");

                    b.Property<bool?>("NoRegistraDocResiduosSistemas");

                    b.Property<bool?>("NoRegistraPoliticaAmbiental");

                    b.Property<bool?>("NoRegistraProcBajaBienesMuebles");

                    b.Property<bool?>("NoRegistraProcComprasSustentables");

                    b.Property<bool?>("NoRegistraProcFormalPapel");

                    b.Property<bool?>("NoRegistraReutilizacionPapel");

                    b.Property<string>("Nombre");

                    b.Property<int>("OldId");

                    b.Property<string>("PgaObservacionRed");

                    b.Property<string>("PgaRespuestaRed");

                    b.Property<bool?>("PgaRevisionRed");

                    b.Property<bool>("ReportaPMG");

                    b.Property<bool>("RevisionDiagnosticoAmbiental");

                    b.Property<bool>("RevisionRed");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<bool?>("ValidacionConcientizacion");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("InstitucionId");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Sexo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Sexo");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Sistema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Sistema");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.SubDivision", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("SubDivisiones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Suelo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<long?>("AislacionId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long?>("EspesorId");

                    b.Property<long?>("MaterialidadId");

                    b.Property<string>("ModifiedBy");

                    b.Property<long?>("PisoId");

                    b.Property<double>("Superficie");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("AislacionId");

                    b.HasIndex("EspesorId");

                    b.HasIndex("MaterialidadId");

                    b.HasIndex("PisoId");

                    b.ToTable("Suelos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Tarea", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccionId");

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("DescripcionTareaEjecutada")
                        .HasMaxLength(1000);

                    b.Property<long>("DimensionBrechaId");

                    b.Property<string>("EstadoAvance")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("FechaFin");

                    b.Property<DateTime>("FechaInicio");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500);

                    b.Property<string>("Responsable")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("AccionId");

                    b.HasIndex("DimensionBrechaId");

                    b.ToTable("PlanGestion_Tareas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Techo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<long?>("AislacionId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("EdificioId");

                    b.Property<long?>("EspesorId");

                    b.Property<long?>("MaterialidadId");

                    b.Property<string>("ModifiedBy");

                    b.Property<double?>("Superficie");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("AislacionId");

                    b.HasIndex("EdificioId")
                        .IsUnique();

                    b.HasIndex("EspesorId");

                    b.HasIndex("MaterialidadId");

                    b.ToTable("Techos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoAgrupamiento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("TipoAgrupamientos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoAislacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("TipoAislaciones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoArchivo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extension");

                    b.Property<bool>("FormatoFactura");

                    b.Property<string>("MimeType");

                    b.Property<string>("Nombre");

                    b.Property<string>("NombreCorto");

                    b.HasKey("Id");

                    b.ToTable("TipoArchivos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoArtefacto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<int?>("Orden");

                    b.HasKey("Id");

                    b.ToTable("TipoArtefactos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoColector", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<string>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("TiposColectores");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Clasificacion");

                    b.Property<bool>("Etapa1");

                    b.Property<bool>("Etapa2");

                    b.Property<string>("Nombre");

                    b.Property<string>("NombreE2");

                    b.Property<int>("Orden");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumentos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoEdificio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<long>("OldId");

                    b.HasKey("Id");

                    b.ToTable("TipoEdificios");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoEquipoCalefaccion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("A");

                    b.Property<bool>("AC");

                    b.Property<float>("B");

                    b.Property<float>("C");

                    b.Property<bool>("CA");

                    b.Property<float>("Costo");

                    b.Property<float>("Costo_Mant");

                    b.Property<float>("Costo_Social");

                    b.Property<float>("Costo_Social_Mant");

                    b.Property<float>("Ejec_HD_Ayte");

                    b.Property<float>("Ejec_HD_Jornal");

                    b.Property<float>("Ejec_HD_Maestro");

                    b.Property<bool>("FR");

                    b.Property<float>("Mant_HD_Ayte");

                    b.Property<float>("Mant_HD_Jornal");

                    b.Property<float>("Mant_HD_Maestro");

                    b.Property<string>("Nombre");

                    b.Property<float>("Rendimiento");

                    b.Property<float>("Temp");

                    b.HasKey("Id");

                    b.ToTable("TiposEquiposCalefaccion");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoEquipoCalefaccionEnergetico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EnergeticoId");

                    b.Property<long>("TipoEquipoCalefaccionId");

                    b.HasKey("Id");

                    b.HasIndex("EnergeticoId");

                    b.HasIndex("TipoEquipoCalefaccionId");

                    b.ToTable("TipoEquipoCalefaccionEnergetico");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoLuminaria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Area_Educacion");

                    b.Property<float>("Area_Oficinas");

                    b.Property<float>("Area_Salud");

                    b.Property<float>("Area_Seguridad");

                    b.Property<int>("Costo_Lamp");

                    b.Property<int>("Costo_Lum");

                    b.Property<int>("Costo_Social_Lamp");

                    b.Property<int>("Costo_Social_Lum");

                    b.Property<float>("Ejec_HD_Ayte");

                    b.Property<float>("Ejec_HD_Jornal");

                    b.Property<float>("Ejec_HD_Maestro");

                    b.Property<string>("Nombre");

                    b.Property<float>("Q_Educacion");

                    b.Property<float>("Q_Oficinas");

                    b.Property<float>("Q_Salud");

                    b.Property<float>("Q_Seguridad");

                    b.Property<float>("Rep_HD_Ayte");

                    b.Property<float>("Rep_HD_Jornal");

                    b.Property<float>("Rep_HD_Maestro");

                    b.Property<int>("Vida_Util");

                    b.HasKey("Id");

                    b.ToTable("TiposLuminarias");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoMaterial", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("TipoMateriales");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoPropiedad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<int>("Orden");

                    b.HasKey("Id");

                    b.ToTable("TipoPropiedades");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoPuerta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Factor");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("TipoPuertas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoSombreado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("FactorSombra");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("TipoSombreados");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoTarifa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("TipoTarifas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoTecho", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Factor");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("TipoTechos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoTecnologia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("TipoTecnologias");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoUnidad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.Property<long>("OldId");

                    b.HasKey("Id");

                    b.ToTable("TipoUnidades");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoUso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("TipoUsos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Trazabilidad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion");

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("DivisionId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("NombreTabla");

                    b.Property<string>("Observacion");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Trazabilidades");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Unidad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccesoFactura");

                    b.Property<bool>("Active");

                    b.Property<bool>("ChkNombre");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("Funcionarios");

                    b.Property<bool>("IndicadorEE");

                    b.Property<int?>("InstitucionResponsableId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nombre");

                    b.Property<long?>("OldId");

                    b.Property<string>("OrganizacionResponsable");

                    b.Property<bool>("ReportaPMG");

                    b.Property<long>("ServicioId");

                    b.Property<int?>("ServicioResponsableId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("ServicioId");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UnidadArea", b =>
                {
                    b.Property<long>("UnidadId");

                    b.Property<long>("AreaId");

                    b.HasKey("UnidadId", "AreaId");

                    b.HasIndex("AreaId");

                    b.ToTable("UnidadesAreas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UnidadInmueble", b =>
                {
                    b.Property<long>("UnidadId");

                    b.Property<long>("InmuebleId");

                    b.HasKey("UnidadId", "InmuebleId");

                    b.HasIndex("InmuebleId");

                    b.ToTable("UnidadesInmuebles");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UnidadMedida", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abrv");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("UnidadesMedida");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UnidadPiso", b =>
                {
                    b.Property<long>("UnidadId");

                    b.Property<long>("PisoId");

                    b.HasKey("UnidadId", "PisoId");

                    b.HasIndex("PisoId");

                    b.ToTable("UnidadesPisos");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<bool?>("Active");

                    b.Property<string>("Address");

                    b.Property<string>("Apellidos");

                    b.Property<string>("Cargo");

                    b.Property<bool?>("Certificado");

                    b.Property<string>("City");

                    b.Property<long>("ComunaId");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Nacionalidad");

                    b.Property<string>("Nombres");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("NumeroTelefonoOpcional");

                    b.Property<int?>("OldId");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("PostalCode");

                    b.Property<string>("Rut");

                    b.Property<string>("SecurityStamp");

                    b.Property<long?>("SexoId");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<bool?>("Validado");

                    b.HasKey("Id");

                    b.HasIndex("ComunaId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("SexoId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UsuarioDivision", b =>
                {
                    b.Property<long>("DivisionId");

                    b.Property<string>("UsuarioId");

                    b.HasKey("DivisionId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuariosDivisiones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UsuarioInstitucion", b =>
                {
                    b.Property<long>("InstitucionId");

                    b.Property<string>("UsuarioId");

                    b.HasKey("InstitucionId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuariosInstituciones");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UsuarioRol", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UsuarioServicio", b =>
                {
                    b.Property<long>("ServicioId");

                    b.Property<string>("UsuarioId");

                    b.HasKey("ServicioId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuariosServicios");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UsuarioUnidad", b =>
                {
                    b.Property<long>("UnidadId");

                    b.Property<string>("UsuarioId");

                    b.HasKey("UnidadId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuariosUnidades");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Ventana", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("Ancho");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<double>("Largo");

                    b.Property<long?>("MaterialidadId");

                    b.Property<string>("ModifiedBy");

                    b.Property<long>("MuroId");

                    b.Property<int>("Numero");

                    b.Property<long?>("PosicionVentanaId");

                    b.Property<double?>("Superficie");

                    b.Property<long?>("TipoCierreId");

                    b.Property<long?>("TipoMarcoId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("MaterialidadId");

                    b.HasIndex("MuroId");

                    b.HasIndex("PosicionVentanaId");

                    b.HasIndex("TipoCierreId");

                    b.HasIndex("TipoMarcoId");

                    b.ToTable("Ventanas");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Viaje", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<long?>("AeropuertoDestinoId");

                    b.Property<long?>("AeropuertoOrigenId");

                    b.Property<string>("CiudadDestino");

                    b.Property<string>("CiudadOrigen");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("Distancia");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("NViajesIdaVuelta");

                    b.Property<int>("NViajesSoloIdaRetorno");

                    b.Property<int?>("Periodo");

                    b.Property<long>("ServicioId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<long>("Version");

                    b.Property<int?>("Year");

                    b.HasKey("Id");

                    b.HasIndex("AeropuertoDestinoId");

                    b.HasIndex("AeropuertoOrigenId");

                    b.HasIndex("ServicioId");

                    b.ToTable("Viajes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ActaComite", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Documento");

                    b.Property<string>("Nresolucion");

                    b.ToTable("ActaComite");

                    b.HasDiscriminator().HasValue("ActaComite");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Charla", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Documento");

                    b.Property<int>("NParticipantes");

                    b.ToTable("Charla");

                    b.HasDiscriminator().HasValue("Charla");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.DifusionPolitica", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Documento");


                    b.HasIndex("PoliticaId");

                    b.ToTable("DifusionPolitica");

                    b.HasDiscriminator().HasValue("DifusionPolitica");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ListadoColaborador", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Documento");


                    b.ToTable("ListadoColaborador");

                    b.HasDiscriminator().HasValue("ListadoColaborador");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ListaIntegrante", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Documento");


                    b.HasIndex("ActaComiteId");

                    b.ToTable("ListaIntegrante");

                    b.HasDiscriminator().HasValue("ListaIntegrante");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Politica", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Documento");

                    b.Property<bool>("ComprasSustentables");

                    b.Property<bool>("EficienciaEnergetica");

                    b.Property<bool>("GestionPapel");

                    b.Property<string>("Otras");

                    b.ToTable("Politica");

                    b.HasDiscriminator().HasValue("Politica");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ProcedimientoBajaBienes", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Documento");

                    b.Property<bool>("BajaBienesFormalizado");

                    b.HasIndex("PoliticaId");

                    b.ToTable("ProcedimientoBajaBienes");

                    b.HasDiscriminator().HasValue("ProcedimientoBajaBienes");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ProcedimientoCompraSustentable", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Documento");


                    b.HasIndex("PoliticaId");

                    b.ToTable("ProcedimientoCompraSustentable");

                    b.HasDiscriminator().HasValue("ProcedimientoCompraSustentable");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ProcedimientoPapel", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Documento");

                    b.Property<bool>("BajoConsumoTinta");

                    b.Property<bool>("DifusionInterna");

                    b.Property<bool>("Implementacion");

                    b.Property<bool>("ImpresionDobleCara");

                    b.HasIndex("PoliticaId");

                    b.ToTable("ProcedimientoPapel");

                    b.HasDiscriminator().HasValue("ProcedimientoPapel");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ProcedimientoResiduo", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Documento");

                    b.Property<bool>("EntregaCertificadoRegistroCantidades");

                    b.Property<bool>("EntregaCertificadoRegistroDisposicion");

                    b.Property<bool>("EntregaCertificadoRegistroRetiro");

                    b.HasIndex("PoliticaId");

                    b.ToTable("ProcedimientoResiduo");

                    b.HasDiscriminator().HasValue("ProcedimientoResiduo");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ProcedimientoResiduoSistema", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Documento");


                    b.HasIndex("PoliticaId");

                    b.ToTable("ProcedimientoResiduoSistema");

                    b.HasDiscriminator().HasValue("ProcedimientoResiduoSistema");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ReunionComite", b =>
                {
                    b.HasBaseType("GobEfi.Web.Data.Entities.Documento");


                    b.HasIndex("ActaComiteId");

                    b.ToTable("ReunionComite");

                    b.HasDiscriminator().HasValue("ReunionComite");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Accion", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.DimensionBrecha", "DimensionBrecha")
                        .WithMany("Acciones")
                        .HasForeignKey("DimensionBrechaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Medida", "Medida")
                        .WithMany()
                        .HasForeignKey("MedidaId");

                    b.HasOne("GobEfi.Web.Data.Entities.Objetivo", "Objetivo")
                        .WithMany("Acciones")
                        .HasForeignKey("ObjetivoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.AccionServicio", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Accion", "Accion")
                        .WithMany("AccionServicios")
                        .HasForeignKey("AccionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GobEfi.Web.Data.Entities.Servicio", "Servicio")
                        .WithMany("AccionServicios")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.AccionUnidad", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Accion", "Accion")
                        .WithMany("AcionUnidades")
                        .HasForeignKey("AccionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("AccionUnidades")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Aeropuerto", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Pais", "Pais")
                        .WithMany("Aeropuertos")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Agua", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("Aguas")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ArchivoAdjunto", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("Adjuntos")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoArchivo", "TipoArchivo")
                        .WithMany()
                        .HasForeignKey("TipoArchivoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ArchivoDp", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("ArchivosDp")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Area", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Piso", "Piso")
                        .WithMany("Areas")
                        .HasForeignKey("PisoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoUso", "TipoUso")
                        .WithMany("Areas")
                        .HasForeignKey("TipoUsoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Artefacto", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("Artefactos")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoArtefacto", "TipoArtefacto")
                        .WithMany("Artefactos")
                        .HasForeignKey("TipoArtefactoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Brecha", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.DimensionBrecha", "DimensionBrecha")
                        .WithMany("Brechas")
                        .HasForeignKey("DimensionBrechaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Objetivo", "Objetivo")
                        .WithMany("Brechas")
                        .HasForeignKey("ObjetivoId");

                    b.HasOne("GobEfi.Web.Data.Entities.Servicio", "Servicio")
                        .WithMany("Brechas")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.BrechaUnidad", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Brecha", "Brecha")
                        .WithMany("BrechaUnidades")
                        .HasForeignKey("BrechaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("BrechaUnidades")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Cimiento", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Edificio", "Edificio")
                        .WithOne("Cimiento")
                        .HasForeignKey("GobEfi.Web.Data.Entities.Cimiento", "EdificioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Materialidad", "Materialida")
                        .WithMany("Cimientos")
                        .HasForeignKey("MaterialidadId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Compra", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("Compras")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Energetico", "Energetico")
                        .WithMany("Compras")
                        .HasForeignKey("EnergeticoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.EstadoValidacion", "EstadoValidacion")
                        .WithMany()
                        .HasForeignKey("EstadoValidacionId");

                    b.HasOne("GobEfi.Web.Data.Entities.ArchivoAdjunto", "Factura")
                        .WithOne("Compra")
                        .HasForeignKey("GobEfi.Web.Data.Entities.Compra", "FacturaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GobEfi.Web.Data.Entities.NumeroCliente", "NumeroCliente")
                        .WithMany("Compras")
                        .HasForeignKey("NumeroClienteId");

                    b.HasOne("GobEfi.Web.Data.Entities.UnidadMedida", "UnidadMedida")
                        .WithMany()
                        .HasForeignKey("UnidadMedidaId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.CompraMedidor", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Compra", "Compra")
                        .WithMany("CompraMedidor")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Medidor", "Medidor")
                        .WithMany("CompraMedidor")
                        .HasForeignKey("MedidorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GobEfi.Web.Data.Entities.ParametroMedicion", "ParametroMedicion")
                        .WithMany()
                        .HasForeignKey("ParametroMedicionId");

                    b.HasOne("GobEfi.Web.Data.Entities.UnidadMedida", "UnidadMedida")
                        .WithMany()
                        .HasForeignKey("UnidadMedidaId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Comuna", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Provincia", "Provincia")
                        .WithMany("Comunas")
                        .HasForeignKey("ProvinciaId");

                    b.HasOne("GobEfi.Web.Data.Entities.Region", "Region")
                        .WithMany("Comunas")
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Contenedor", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("Contenedores")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.DimensionServicio", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.DimensionBrecha", "DimensionBrecha")
                        .WithMany("DimensionServicios")
                        .HasForeignKey("DimensionBrechaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Servicio", "Servicio")
                        .WithMany("DimensionServicios")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Direccion", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Comuna", "Comuna")
                        .WithMany("Direcciones")
                        .HasForeignKey("ComunaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Provincia", "Provincia")
                        .WithMany("Direcciones")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Region", "Region")
                        .WithMany("Direcciones")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Division", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Servicio", "AdministracionServicio")
                        .WithMany()
                        .HasForeignKey("AdministracionServicioId");

                    b.HasOne("GobEfi.Web.Data.Entities.Comuna", "Comuna")
                        .WithMany("Divisiones")
                        .HasForeignKey("ComunaId");

                    b.HasOne("GobEfi.Web.Data.Entities.Direccion", "DireccionInmueble")
                        .WithMany("Inmuebles")
                        .HasForeignKey("DireccionInmuebleId");

                    b.HasOne("GobEfi.Web.Data.Entities.Edificio", "Edificio")
                        .WithMany("Divisiones")
                        .HasForeignKey("EdificioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("GobEfi.Web.Data.Entities.Provincia", "Provincia")
                        .WithMany("Inmuebles")
                        .HasForeignKey("ProvinciaId");

                    b.HasOne("GobEfi.Web.Data.Entities.Region", "Region")
                        .WithMany("Inmuebles")
                        .HasForeignKey("RegionId");

                    b.HasOne("GobEfi.Web.Data.Entities.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoPropiedad", "TipoPropiedad")
                        .WithMany()
                        .HasForeignKey("TipoPropiedadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoUnidad", "TipoUnidad")
                        .WithMany()
                        .HasForeignKey("TipoUnidadId");

                    b.HasOne("GobEfi.Web.Data.Entities.TipoUso", "TipoUso")
                        .WithMany("Divisiones")
                        .HasForeignKey("TipoUsoId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Documento", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Servicio", "Servicio")
                        .WithMany("Documentos")
                        .HasForeignKey("ServicioId");

                    b.HasOne("GobEfi.Web.Data.Entities.TipoDocumento", "TipoDocumento")
                        .WithMany("Documentos")
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Edificio", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Comuna", "Comuna")
                        .WithMany()
                        .HasForeignKey("ComunaId");

                    b.HasOne("GobEfi.Web.Data.Entities.Entorno", "Entorno")
                        .WithMany()
                        .HasForeignKey("EntornoId");

                    b.HasOne("GobEfi.Web.Data.Entities.InerciaTermica", "InerciaTermica")
                        .WithMany()
                        .HasForeignKey("InerciaTermicaId");

                    b.HasOne("GobEfi.Web.Data.Entities.TipoAgrupamiento", "TipoAgrupamiento")
                        .WithMany()
                        .HasForeignKey("TipoAgrupamientoId");

                    b.HasOne("GobEfi.Web.Data.Entities.TipoEdificio", "TipoEdificio")
                        .WithMany("Edificios")
                        .HasForeignKey("TipoEdificioId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EmpresaDistribuidora", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Energetico", "Energetico")
                        .WithMany()
                        .HasForeignKey("EnergeticoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EmpresaDistribuidoraComuna", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Comuna", "Comuna")
                        .WithMany("EmpresaDistribuidoraComunas")
                        .HasForeignKey("ComunaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.EmpresaDistribuidora", "EmpresaDistribuidora")
                        .WithMany("EmpresaDistribuidoraComunas")
                        .HasForeignKey("EmpresaDistribuidoraId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EncuestaColaborador", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EnergeticoDivision", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("EnergeticosDivision")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Energetico", "Energetico")
                        .WithMany("EnergeticoDivision")
                        .HasForeignKey("EnergeticoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.NumeroCliente", "NumeroCliente")
                        .WithMany("EnergeticoDivision")
                        .HasForeignKey("NumeroClienteId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EnergeticoUnidadMedida", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Energetico", "Energetico")
                        .WithMany("EnergeticoUnMedida")
                        .HasForeignKey("EnergeticoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.UnidadMedida", "UnidadMedida")
                        .WithMany("EnergeticoUnidadMedidas")
                        .HasForeignKey("UnidadMedidaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Equipo", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division")
                        .WithMany("Equipos")
                        .HasForeignKey("DivisionId");

                    b.HasOne("GobEfi.Web.Data.Entities.Energetico", "EnergeticIn")
                        .WithMany()
                        .HasForeignKey("EnergeticInId");

                    b.HasOne("GobEfi.Web.Data.Entities.Energetico", "EnergeticOut")
                        .WithMany()
                        .HasForeignKey("EnergeticOutId");

                    b.HasOne("GobEfi.Web.Data.Entities.ModoOperacion", "ModoOperacion")
                        .WithMany()
                        .HasForeignKey("ModoOperacionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Sistema", "Sistema")
                        .WithMany()
                        .HasForeignKey("SistemaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoTecnologia", "TipoTecnologia")
                        .WithMany()
                        .HasForeignKey("TipoTecnologiaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EstructuraAislacion", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Aislacion", "Aislacion")
                        .WithMany("Estructuras")
                        .HasForeignKey("AislacionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Estructura", "Estructura")
                        .WithMany("Aislaciones")
                        .HasForeignKey("EstructuraId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EstructuraMaterialidad", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Estructura", "Estructura")
                        .WithMany("Materialidades")
                        .HasForeignKey("EstructuraId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Materialidad", "Materialidad")
                        .WithMany("Estructuras")
                        .HasForeignKey("MaterialidadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EstructuraPosicionVentana", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Estructura", "Estructura")
                        .WithMany("PosicionVentanas")
                        .HasForeignKey("EstructuraId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.PosicionVentana", "PosicionVentana")
                        .WithMany("Estructuras")
                        .HasForeignKey("PosicionVentanaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.EstructuraTipoSombreado", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Estructura", "Estructura")
                        .WithMany("TiposSombreado")
                        .HasForeignKey("EstructuraId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoSombreado", "TipoSombreado")
                        .WithMany("Estructuras")
                        .HasForeignKey("TipoSombreadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Impresora", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Indicador", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.DimensionBrecha", "DimensionBrecha")
                        .WithMany("Indicadores")
                        .HasForeignKey("DimensionBrechaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Objetivo", "Objetivo")
                        .WithMany()
                        .HasForeignKey("ObjetivoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Integrante", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.ListaIntegrante", "ListaIntegrante")
                        .WithMany("Integrantes")
                        .HasForeignKey("ListaIntegranteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Medida", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.DimensionBrecha", "DimensionBrecha")
                        .WithMany("Medidas")
                        .HasForeignKey("DimensionbrechaId");

                    b.HasOne("GobEfi.Web.Data.Entities.Medida")
                        .WithMany("Medidas")
                        .HasForeignKey("MedidaId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Medidor", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("Medidores")
                        .HasForeignKey("DivisionId");

                    b.HasOne("GobEfi.Web.Data.Entities.NumeroCliente", "NumeroCliente")
                        .WithMany("Medidores")
                        .HasForeignKey("NumeroClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.MedidorDivision", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("MedidorDivision")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Medidor", "Medidor")
                        .WithMany("MedidorDivision")
                        .HasForeignKey("MedidorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.MedidorInteligenteDivision", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("MedidorInteligenteDivisiones")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.MedidorInteligente", "MedidorInteligente")
                        .WithMany("MedidorInteligenteDivisiones")
                        .HasForeignKey("MedidorInteligenteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.MedidorInteligenteEdificio", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Edificio", "Edificio")
                        .WithMany("MedidorInteligenteEdificio")
                        .HasForeignKey("EdificioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.MedidorInteligente", "MedidorInteligente")
                        .WithMany("MedidorInteligenteEdificios")
                        .HasForeignKey("MedidorInteligenteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.MedidorInteligenteServicio", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.MedidorInteligente", "MedidorInteligente")
                        .WithMany("MedidorInteligenteServicios")
                        .HasForeignKey("MedidorInteligenteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Servicio", "Servicio")
                        .WithMany("MedidorInteligenteServicios")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Menu", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Menu", "ParentMenu")
                        .WithMany("SubMenus")
                        .HasForeignKey("MenuId");

                    b.HasOne("GobEfi.Web.Data.Entities.MenuPanel", "MenuPanel")
                        .WithMany("Menus")
                        .HasForeignKey("MenuPanelId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Muro", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Aislacion", "AislacionExt")
                        .WithMany()
                        .HasForeignKey("AislacionExtId");

                    b.HasOne("GobEfi.Web.Data.Entities.Aislacion", "AislacionInt")
                        .WithMany()
                        .HasForeignKey("AislacionIntId");

                    b.HasOne("GobEfi.Web.Data.Entities.Espesor", "Espesor")
                        .WithMany("Muros")
                        .HasForeignKey("EspesorId");

                    b.HasOne("GobEfi.Web.Data.Entities.Materialidad", "Materialidad")
                        .WithMany()
                        .HasForeignKey("MaterialidadId");

                    b.HasOne("GobEfi.Web.Data.Entities.Piso", "Piso")
                        .WithMany("Muros")
                        .HasForeignKey("PisoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoSombreado", "TipoSombreado")
                        .WithMany("Muros")
                        .HasForeignKey("TipoSombreadoId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.NotasCertificado", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Certificado", "Certificado")
                        .WithMany("Notas")
                        .HasForeignKey("CertificadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Usuario", "Usuario")
                        .WithMany("Notas")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.NumeroCliente", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division")
                        .WithMany("NumerosClientes")
                        .HasForeignKey("DivisionId");

                    b.HasOne("GobEfi.Web.Data.Entities.EmpresaDistribuidora", "EmpresaDistribuidora")
                        .WithMany()
                        .HasForeignKey("EmpresaDistribuidoraId");

                    b.HasOne("GobEfi.Web.Data.Entities.TipoTarifa", "TipoTarifa")
                        .WithMany()
                        .HasForeignKey("TipoTarifaId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Objetivo", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.DimensionBrecha", "DimensionBrecha")
                        .WithMany("Objetivos")
                        .HasForeignKey("DimensionBrechaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Objetivo")
                        .WithMany("Objetivos")
                        .HasForeignKey("ObjetivoId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ParametroMedicion", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.UnidadMedida", "UnidadesMedida")
                        .WithMany("ParametrosMedicion")
                        .HasForeignKey("UnidadesMedidaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Permisos", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Rol", "Rol")
                        .WithMany("Permisos")
                        .HasForeignKey("RolId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.PermisosBackEnd", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.EndPoint", "EndPoint")
                        .WithMany("PermisosBackEnd")
                        .HasForeignKey("EndPointId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Rol", "Rol")
                        .WithMany("PermisosBackEnd")
                        .HasForeignKey("RolId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Piso", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Inmueble")
                        .WithMany("ListPisos")
                        .HasForeignKey("DivisionId");

                    b.HasOne("GobEfi.Web.Data.Entities.Edificio", "Edificio")
                        .WithMany("Pisos")
                        .HasForeignKey("EdificioId");

                    b.HasOne("GobEfi.Web.Data.Entities.NumeroPiso", "NumeroPiso")
                        .WithMany()
                        .HasForeignKey("NumeroPisoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoUso", "TipoUso")
                        .WithMany()
                        .HasForeignKey("TipoUsoId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Programa", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Servicio", "Servicio")
                        .WithMany("Programas")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Provincia", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Region", "Region")
                        .WithMany("Provincias")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Puerta", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Materialidad", "Materialidad")
                        .WithMany()
                        .HasForeignKey("MaterialidadId");

                    b.HasOne("GobEfi.Web.Data.Entities.Muro", "Muro")
                        .WithMany("Puertas")
                        .HasForeignKey("MuroId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Aislacion", "TipoMarco")
                        .WithMany()
                        .HasForeignKey("TipoMarcoId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Reporte", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.TipoArchivo", "TipoArchivo")
                        .WithMany()
                        .HasForeignKey("TipoArchivoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ReporteRol", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Reporte", "Reporte")
                        .WithMany("ReportesRol")
                        .HasForeignKey("ReporteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Rol", "Rol")
                        .WithMany("ReportesRol")
                        .HasForeignKey("RolId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Residuo", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("Residuos")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Resma", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("Resmas")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Servicio", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Institucion", "Institucion")
                        .WithMany("Servicios")
                        .HasForeignKey("InstitucionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.SubDivision", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("SubDivisiones")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Suelo", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Aislacion", "Aislacion")
                        .WithMany("Suelos")
                        .HasForeignKey("AislacionId");

                    b.HasOne("GobEfi.Web.Data.Entities.Espesor", "Espesor")
                        .WithMany("Suelos")
                        .HasForeignKey("EspesorId");

                    b.HasOne("GobEfi.Web.Data.Entities.Materialidad", "Materialidad")
                        .WithMany("Suelos")
                        .HasForeignKey("MaterialidadId");

                    b.HasOne("GobEfi.Web.Data.Entities.Piso", "Piso")
                        .WithMany("Suelos")
                        .HasForeignKey("PisoId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Tarea", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Accion", "Accion")
                        .WithMany("Tareas")
                        .HasForeignKey("AccionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GobEfi.Web.Data.Entities.DimensionBrecha", "DimensionBrecha")
                        .WithMany("Tareas")
                        .HasForeignKey("DimensionBrechaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Techo", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Aislacion", "Aislacion")
                        .WithMany("Techos")
                        .HasForeignKey("AislacionId");

                    b.HasOne("GobEfi.Web.Data.Entities.Edificio", "Edificio")
                        .WithOne("Techo")
                        .HasForeignKey("GobEfi.Web.Data.Entities.Techo", "EdificioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Espesor", "Espesor")
                        .WithMany("Techos")
                        .HasForeignKey("EspesorId");

                    b.HasOne("GobEfi.Web.Data.Entities.Materialidad", "Materialidad")
                        .WithMany("Techos")
                        .HasForeignKey("MaterialidadId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.TipoEquipoCalefaccionEnergetico", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Energetico", "Energetico")
                        .WithMany("TipoCalefaccionEnergeticos")
                        .HasForeignKey("EnergeticoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.TipoEquipoCalefaccion", "TipoEquipoCalefaccion")
                        .WithMany("TipoCalefaccionEnergeticos")
                        .HasForeignKey("TipoEquipoCalefaccionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Trazabilidad", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("Trazabilidades")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Unidad", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Servicio", "Servicio")
                        .WithMany("Unidades")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UnidadArea", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Area", "Area")
                        .WithMany("UnidadAreas")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GobEfi.Web.Data.Entities.Unidad", "Unidad")
                        .WithMany("UnidadAreas")
                        .HasForeignKey("UnidadId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UnidadInmueble", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Inmueble")
                        .WithMany("UnidadInmuebles")
                        .HasForeignKey("InmuebleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GobEfi.Web.Data.Entities.Unidad", "Unidad")
                        .WithMany("UnidadInmuebles")
                        .HasForeignKey("UnidadId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UnidadPiso", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Piso", "Piso")
                        .WithMany("UnidadPisos")
                        .HasForeignKey("PisoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GobEfi.Web.Data.Entities.Unidad", "Unidad")
                        .WithMany("UnidadPisos")
                        .HasForeignKey("UnidadId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Usuario", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Comuna", "Comuna")
                        .WithMany()
                        .HasForeignKey("ComunaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Sexo", "Sexo")
                        .WithMany()
                        .HasForeignKey("SexoId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UsuarioDivision", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Division", "Division")
                        .WithMany("UsuariosDivisiones")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Usuario", "Usuario")
                        .WithMany("UsuariosDivisiones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UsuarioInstitucion", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Institucion", "Institucion")
                        .WithMany("UsuariosInstituciones")
                        .HasForeignKey("InstitucionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Usuario", "Usuario")
                        .WithMany("UsuariosInstituciones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UsuarioRol", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UsuarioServicio", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Servicio", "Servicio")
                        .WithMany("UsuariosServicios")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Usuario", "Usuario")
                        .WithMany("UsuariosServicios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.UsuarioUnidad", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Unidad", "Unidad")
                        .WithMany("UsuarioUnidades")
                        .HasForeignKey("UnidadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioUnidades")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Ventana", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Materialidad", "Materialidad")
                        .WithMany("Ventanas")
                        .HasForeignKey("MaterialidadId");

                    b.HasOne("GobEfi.Web.Data.Entities.Muro", "Muro")
                        .WithMany("Ventanas")
                        .HasForeignKey("MuroId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GobEfi.Web.Data.Entities.PosicionVentana", "PosicionVentana")
                        .WithMany()
                        .HasForeignKey("PosicionVentanaId");

                    b.HasOne("GobEfi.Web.Data.Entities.Aislacion", "TipoCierre")
                        .WithMany("VentanasTipoCierre")
                        .HasForeignKey("TipoCierreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GobEfi.Web.Data.Entities.Aislacion", "TipoMarco")
                        .WithMany("VentanasTipoMarco")
                        .HasForeignKey("TipoMarcoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.Viaje", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Aeropuerto", "AeropuertoDestino")
                        .WithMany()
                        .HasForeignKey("AeropuertoDestinoId");

                    b.HasOne("GobEfi.Web.Data.Entities.Aeropuerto", "AeropuertoOrigen")
                        .WithMany()
                        .HasForeignKey("AeropuertoOrigenId");

                    b.HasOne("GobEfi.Web.Data.Entities.Servicio", "Servicio")
                        .WithMany("Viajes")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Rol")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Usuario")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Usuario")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Usuario")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.DifusionPolitica", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Politica", "Politica")
                        .WithMany("Difusiones")
                        .HasForeignKey("PoliticaId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ListaIntegrante", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.ActaComite", "ActaComite")
                        .WithMany()
                        .HasForeignKey("ActaComiteId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ProcedimientoBajaBienes", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Politica", "Politica")
                        .WithMany()
                        .HasForeignKey("PoliticaId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ProcedimientoCompraSustentable", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Politica", "Politica")
                        .WithMany()
                        .HasForeignKey("PoliticaId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ProcedimientoPapel", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Politica", "Politica")
                        .WithMany()
                        .HasForeignKey("PoliticaId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ProcedimientoResiduo", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Politica", "Politica")
                        .WithMany()
                        .HasForeignKey("PoliticaId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ProcedimientoResiduoSistema", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.Politica", "Politica")
                        .WithMany()
                        .HasForeignKey("PoliticaId");
                });

            modelBuilder.Entity("GobEfi.Web.Data.Entities.ReunionComite", b =>
                {
                    b.HasOne("GobEfi.Web.Data.Entities.ActaComite", "ActaComite")
                        .WithMany()
                        .HasForeignKey("ActaComiteId");
                });
#pragma warning restore 612, 618
        }
    }
}
