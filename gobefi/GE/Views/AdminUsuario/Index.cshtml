@inject UserManager<Usuario> UserManager
@model GobEfi.Web.Models.UsuarioModels.UsuarioIndexModel


@{
    ViewData["Title"] = "Index";
    PermisosModel permisos = (PermisosModel)ViewData["permisos"];
}

<input type="hidden" id="admin-users-servicioId" value="@ViewBag.ServicioId" />
<div class="row">
    <div class="col-12">
        <h2>Usuarios</h2>
        <p>
            @if (permisos.Escritura)
            {
                <a asp-action="Create" class="btn btn-primary"><span class="@Constants.Icons.CREAR"></span> Crear nuevo</a>
            }
            <button type="button" class="btn btn-primary" id="filter">
                <span class="fa fa-filter"></span> Filtros
            </button>
            <a asp-controller="Admin" asp-action="Index" class="btn btn-secondary"><span class="@Constants.Icons.VOLVER"></span> Volver</a>

            <a asp-action="OnPostExport" class="btn btn-primary"><span class="@Constants.Icons.DESCARGAR"></span> Exportar</a>
        </p>
    </div>
</div>
<div class="card container">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Nombres)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Apellidos)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>@Constants.Titles.ACCION</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nombres)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Apellidos)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @(await Component.InvokeAsync<ActionsViewComponent>(new IActionList { Id = (string)(item.Id), Permisos = permisos }))
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @(await Component.InvokeAsync<PaginationViewComponent>(Model.Items))
</div>
<div class="modal" id="userFilter">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="Index" asp-controller="adminUsuario" method="get">
                <div class="modal-header">
                    <h5 class="modal-title">Filtrar por:</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <div class="form-group">
                        <label class="form-label" asp-for="Nombres"></label>
                        <input class="form-control" asp-for="Nombres" type="text" />
                    </div>
                    <div class="form-group">
                        <label class="form-label" asp-for="Rut"></label>
                        <input class="form-control" asp-for="Rut" type="text" />
                    </div>
                    <div class="form-group">
                        <label class="form-label" asp-for="Email"></label>
                        <input class="form-control" asp-for="Email" type="text" />
                    </div>
                    <div class="form-group">
                        <label class="form-label" asp-for="InstitucionId"></label>
                        <select class="form-control" asp-for="InstitucionId" asp-items="ViewBag.Institucion"></select>
                    </div>
                    <div class="form-group">
                        <label class="form-label" asp-for="ServicioId"></label>
                        <select class="form-control" asp-for="ServicioId" disabled>
                            <option>@Constants.Titles.SELECCIONE</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label class="form-label" asp-for="Validado"></label>
                        <select class="form-control" asp-for="Validado" asp-items="ViewBag.Tiene"></select>

                    </div>
                    <div class="form-group">
                        <label class="form-label" asp-for="Certificado"></label>
                        <select class="form-control" asp-for="Certificado" asp-items="ViewBag.Tiene"></select>
                    </div>
                    <div class="form-group">
                        <label class="form-label" asp-for="Activo"></label><br />
                        <label class="switch">
                            <input type="checkbox" class="form-control" asp-for="Activo">
                            <span class="slider round"></span>
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Filtrar</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script type="text/javascript">
    


    $(document).ready(function () {

        $("#InstitucionId").change();

        $("#filter").click(function () {
            $("#userFilter").modal('toggle');
        });

        
    });

    $("#InstitucionId").change(function () {
        $("#ServicioId").attr("disabled", "disabled").html("<option value=''>@Constants.Titles.SELECCIONE</option>");


        if ($(this).val()) {
            loadSelectData($("#ServicioId"), "@Url.Content("~/api/servicios/getserviciosbyuserandinstitucion")/@UserManager.GetUserId(User)/" + $(this).val(), Number($("#admin-users-servicioId").val()), "id", true);
        }

        
    });
    
</script>